plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
//    id "org.jetbrains.kotlin.kapt" version "1.6.0"
}

group "edu.tpu.ruban"
version "0.0.1"
mainClassName = "io.ktor.server.netty.EngineMain"

repositories {
    mavenCentral()
    jcenter()
    google()
    maven { url 'https://kotlin.bintray.com/ktor' }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-freemarker:$ktor_version"
    implementation "io.ktor:ktor-server-sessions:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"

    // postgresql, hikari
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-java-time:$exposed_version"
    implementation "org.postgresql:postgresql:$postgres_version"
    implementation "com.zaxxer:HikariCP:$hikari_version"

    // encryption
    implementation "org.mindrot:jbcrypt:0.4"

    // di
    implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-ktor:$koin_version"
    testImplementation "io.insert-koin:koin-test:$koin_version"
//    def daggerVersion = 2.40
//    implementation "com.google.dagger:dagger-android:$daggerVersion"
//    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // linkedmap
    implementation 'org.apache.commons:commons-collections4:4.4'

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}